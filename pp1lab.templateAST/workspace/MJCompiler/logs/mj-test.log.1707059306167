INFO  16:07:31,675 - Compiling source file: C:\Users\jf160343d\Desktop\PP1_Updated\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:07:31,697 - #2 program
INFO  16:07:31,697 - #39 test301
INFO  16:07:31,697 - #5 namespace
INFO  16:07:31,698 - #39 Konstante
INFO  16:07:31,698 - #34 {
INFO  16:07:31,698 - #8 const
INFO  16:07:31,698 - #39 int
INFO  16:07:31,699 - #39 nula
INFO  16:07:31,699 - #18 =
INFO  16:07:31,699 - #36 0
INFO  16:07:31,699 - #28 ;
INFO  16:07:31,699 - #8 const
INFO  16:07:31,700 - #39 int
INFO  16:07:31,700 - #39 jedan
INFO  16:07:31,700 - #18 =
INFO  16:07:31,700 - #36 1
INFO  16:07:31,700 - #28 ;
INFO  16:07:31,700 - #8 const
INFO  16:07:31,700 - #39 int
INFO  16:07:31,700 - #39 pet
INFO  16:07:31,702 - #18 =
INFO  16:07:31,702 - #36 5
INFO  16:07:31,702 - #28 ;
INFO  16:07:31,702 - #8 const
INFO  16:07:31,702 - #39 bool
INFO  16:07:31,702 - #39 bvar
INFO  16:07:31,702 - #18 =
INFO  16:07:31,702 - #38 1
INFO  16:07:31,702 - #28 ;
INFO  16:07:31,703 - #8 const
INFO  16:07:31,703 - #39 char
INFO  16:07:31,703 - #39 cvar
INFO  16:07:31,703 - #18 =
INFO  16:07:31,703 - #37 c
INFO  16:07:31,703 - #28 ;
INFO  16:07:31,703 - #39 int
INFO  16:07:31,703 - #39 num_var
INFO  16:07:31,703 - #28 ;
INFO  16:07:31,703 - #34 {
INFO  16:07:31,704 - #35 }
INFO  16:07:31,704 - #35 }
INFO  16:07:31,704 - #5 namespace
INFO  16:07:31,705 - #39 Nizovi
INFO  16:07:31,705 - #34 {
INFO  16:07:31,705 - #39 int
INFO  16:07:31,705 - #39 niz
INFO  16:07:31,705 - #30 [
INFO  16:07:31,705 - #31 ]
INFO  16:07:31,705 - #28 ;
INFO  16:07:31,705 - #34 {
INFO  16:07:31,705 - #35 }
INFO  16:07:31,705 - #35 }
INFO  16:07:31,705 - #5 namespace
INFO  16:07:31,705 - #39 Rez
INFO  16:07:31,705 - #34 {
INFO  16:07:31,706 - #39 int
INFO  16:07:31,706 - #39 rez1
INFO  16:07:31,706 - #28 ;
INFO  16:07:31,706 - #39 int
INFO  16:07:31,706 - #39 rez2
INFO  16:07:31,706 - #28 ;
INFO  16:07:31,706 - #39 int
INFO  16:07:31,706 - #39 rez3
INFO  16:07:31,706 - #28 ;
INFO  16:07:31,706 - #34 {
INFO  16:07:31,706 - #35 }
INFO  16:07:31,706 - #35 }
INFO  16:07:31,706 - #39 int
INFO  16:07:31,706 - #39 global_num
INFO  16:07:31,706 - #28 ;
INFO  16:07:31,706 - #39 char
INFO  16:07:31,706 - #39 nizch
INFO  16:07:31,706 - #30 [
INFO  16:07:31,706 - #31 ]
INFO  16:07:31,706 - #28 ;
INFO  16:07:31,707 - #39 int
INFO  16:07:31,707 - #39 nizrez
INFO  16:07:31,707 - #30 [
INFO  16:07:31,707 - #31 ]
INFO  16:07:31,707 - #28 ;
INFO  16:07:31,707 - #8 const
INFO  16:07:31,707 - #39 int
INFO  16:07:31,707 - #39 dva
INFO  16:07:31,707 - #18 =
INFO  16:07:31,707 - #36 2
INFO  16:07:31,707 - #28 ;
INFO  16:07:31,707 - #34 {
INFO  16:07:31,707 - #7 void
INFO  16:07:31,707 - #39 main
INFO  16:07:31,707 - #32 (
INFO  16:07:31,707 - #33 )
INFO  16:07:31,707 - #39 int
INFO  16:07:31,708 - #39 bodovi
INFO  16:07:31,708 - #28 ;
INFO  16:07:31,708 - #39 bool
INFO  16:07:31,708 - #39 bt
INFO  16:07:31,708 - #28 ;
INFO  16:07:31,708 - #34 {
INFO  16:07:31,708 - #39 Nizovi
INFO  16:07:31,709 - #10 ::
INFO  16:07:31,709 - #39 niz
INFO  16:07:31,709 - #18 =
INFO  16:07:31,709 - #9 new
INFO  16:07:31,709 - #39 int
INFO  16:07:31,709 - #30 [
INFO  16:07:31,709 - #36 4
INFO  16:07:31,709 - #31 ]
INFO  16:07:31,710 - #28 ;
INFO  16:07:31,711 - #39 nizrez
INFO  16:07:31,711 - #18 =
INFO  16:07:31,711 - #9 new
INFO  16:07:31,711 - #39 int
INFO  16:07:31,711 - #30 [
INFO  16:07:31,711 - #36 4
INFO  16:07:31,711 - #31 ]
INFO  16:07:31,711 - #28 ;
INFO  16:07:31,711 - #39 nizrez
INFO  16:07:31,711 - #30 [
INFO  16:07:31,712 - #36 2
INFO  16:07:31,712 - #31 ]
INFO  16:07:31,712 - #18 =
INFO  16:07:31,712 - #36 2
INFO  16:07:31,712 - #39 Nizovi
ERROR 16:07:31,712 - 
Sintaksna greska na liniji 42
INFO  16:07:31,712 - #10 ::
INFO  16:07:31,712 - #39 niz
INFO  16:07:31,712 - #30 [
INFO  16:07:31,713 - #36 3
INFO  16:07:31,713 - #31 ]
INFO  16:07:31,713 - #18 =
INFO  16:07:31,713 - #36 3
INFO  16:07:31,713 - #28 ;
INFO  16:07:31,713 - #39 Rez
INFO  16:07:31,713 - #10 ::
INFO  16:07:31,713 - #39 rez1
ERROR 16:07:31,713 - Izvrsen oporavak do ; u liniji 41
INFO  16:07:31,714 - #18 =
INFO  16:07:31,714 - #39 Konstante
INFO  16:07:31,714 - #10 ::
INFO  16:07:31,714 - #39 nula
INFO  16:07:31,714 - #15 *
INFO  16:07:31,714 - #39 Nizovi
INFO  16:07:31,715 - #10 ::
INFO  16:07:31,715 - #39 niz
INFO  16:07:31,715 - #30 [
INFO  16:07:31,715 - #36 3
INFO  16:07:31,715 - #31 ]
INFO  16:07:31,715 - #15 *
INFO  16:07:31,715 - #32 (
INFO  16:07:31,715 - #39 Konstante
INFO  16:07:31,715 - #10 ::
INFO  16:07:31,715 - #39 jedan
INFO  16:07:31,715 - #11 +
INFO  16:07:31,715 - #39 dva
INFO  16:07:31,716 - #33 )
INFO  16:07:31,716 - #11 +
INFO  16:07:31,716 - #39 nizrez
INFO  16:07:31,716 - #30 [
INFO  16:07:31,716 - #36 2
INFO  16:07:31,716 - #31 ]
INFO  16:07:31,717 - #28 ;
INFO  16:07:31,717 - #3 print
INFO  16:07:31,717 - #32 (
INFO  16:07:31,717 - #39 Rez
INFO  16:07:31,717 - #10 ::
INFO  16:07:31,717 - #39 rez1
INFO  16:07:31,717 - #33 )
INFO  16:07:31,723 - #28 ;
INFO  16:07:31,723 - #35 }
INFO  16:07:31,724 - #35 }
INFO  16:07:31,725 - Program(
  Prog_id(
   test301
  ) [Prog_id]
  Namespaces(
    Namespaces(
      Namespaces(
        NoNamespace(
        ) [NoNamespace]
        Namespace(
          NamespaceName(
           Konstante
          ) [NamespaceName]
          NamespaceDeclarations(
            Declarations(
              Declarations(
                Declarations(
                  Declarations(
                    Declarations(
                      Declarations(
                        NoDeclarations(
                        ) [NoDeclarations]
                        ConstDeclarations(
                          Const_dec(
                            Type(
                             int
                            ) [Type]
                            SingleConstDeclarationPart(
                              ConstIdInt(
                               nula
                               0
                              ) [ConstIdInt]
                            ) [SingleConstDeclarationPart]
                          ) [Const_dec]
                        ) [ConstDeclarations]
                      ) [Declarations]
                      ConstDeclarations(
                        Const_dec(
                          Type(
                           int
                          ) [Type]
                          SingleConstDeclarationPart(
                            ConstIdInt(
                             jedan
                             1
                            ) [ConstIdInt]
                          ) [SingleConstDeclarationPart]
                        ) [Const_dec]
                      ) [ConstDeclarations]
                    ) [Declarations]
                    ConstDeclarations(
                      Const_dec(
                        Type(
                         int
                        ) [Type]
                        SingleConstDeclarationPart(
                          ConstIdInt(
                           pet
                           5
                          ) [ConstIdInt]
                        ) [SingleConstDeclarationPart]
                      ) [Const_dec]
                    ) [ConstDeclarations]
                  ) [Declarations]
                  ConstDeclarations(
                    Const_dec(
                      Type(
                       bool
                      ) [Type]
                      SingleConstDeclarationPart(
                        ConstIdBool(
                         bvar
                         1
                        ) [ConstIdBool]
                      ) [SingleConstDeclarationPart]
                    ) [Const_dec]
                  ) [ConstDeclarations]
                ) [Declarations]
                ConstDeclarations(
                  Const_dec(
                    Type(
                     char
                    ) [Type]
                    SingleConstDeclarationPart(
                      ConstIdChar(
                       cvar
                       c
                      ) [ConstIdChar]
                    ) [SingleConstDeclarationPart]
                  ) [Const_dec]
                ) [ConstDeclarations]
              ) [Declarations]
              VarDeclarations(
                Var_dec(
                  Type(
                   int
                  ) [Type]
                  SingleVarIdList(
                    VarId(
                     num_var
                    ) [VarId]
                  ) [SingleVarIdList]
                ) [Var_dec]
              ) [VarDeclarations]
            ) [Declarations]
          ) [NamespaceDeclarations]
        ) [Namespace]
      ) [Namespaces]
      Namespace(
        NamespaceName(
         Nizovi
        ) [NamespaceName]
        NamespaceDeclarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            VarDeclarations(
              Var_dec(
                Type(
                 int
                ) [Type]
                SingleVarIdList(
                  VarOrArrayId(
                   niz
                  ) [VarOrArrayId]
                ) [SingleVarIdList]
              ) [Var_dec]
            ) [VarDeclarations]
          ) [Declarations]
        ) [NamespaceDeclarations]
      ) [Namespace]
    ) [Namespaces]
    Namespace(
      NamespaceName(
       Rez
      ) [NamespaceName]
      NamespaceDeclarations(
        Declarations(
          Declarations(
            Declarations(
              NoDeclarations(
              ) [NoDeclarations]
              VarDeclarations(
                Var_dec(
                  Type(
                   int
                  ) [Type]
                  SingleVarIdList(
                    VarId(
                     rez1
                    ) [VarId]
                  ) [SingleVarIdList]
                ) [Var_dec]
              ) [VarDeclarations]
            ) [Declarations]
            VarDeclarations(
              Var_dec(
                Type(
                 int
                ) [Type]
                SingleVarIdList(
                  VarId(
                   rez2
                  ) [VarId]
                ) [SingleVarIdList]
              ) [Var_dec]
            ) [VarDeclarations]
          ) [Declarations]
          VarDeclarations(
            Var_dec(
              Type(
               int
              ) [Type]
              SingleVarIdList(
                VarId(
                 rez3
                ) [VarId]
              ) [SingleVarIdList]
            ) [Var_dec]
          ) [VarDeclarations]
        ) [Declarations]
      ) [NamespaceDeclarations]
    ) [Namespace]
  ) [Namespaces]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VarDeclarations(
            Var_dec(
              Type(
               int
              ) [Type]
              SingleVarIdList(
                VarId(
                 global_num
                ) [VarId]
              ) [SingleVarIdList]
            ) [Var_dec]
          ) [VarDeclarations]
        ) [Declarations]
        VarDeclarations(
          Var_dec(
            Type(
             char
            ) [Type]
            SingleVarIdList(
              VarOrArrayId(
               nizch
              ) [VarOrArrayId]
            ) [SingleVarIdList]
          ) [Var_dec]
        ) [VarDeclarations]
      ) [Declarations]
      VarDeclarations(
        Var_dec(
          Type(
           int
          ) [Type]
          SingleVarIdList(
            VarOrArrayId(
             nizrez
            ) [VarOrArrayId]
          ) [SingleVarIdList]
        ) [Var_dec]
      ) [VarDeclarations]
    ) [Declarations]
    ConstDeclarations(
      Const_dec(
        Type(
         int
        ) [Type]
        SingleConstDeclarationPart(
          ConstIdInt(
           dva
           2
          ) [ConstIdInt]
        ) [SingleConstDeclarationPart]
      ) [Const_dec]
    ) [ConstDeclarations]
  ) [Declarations]
  MainMethod(
    MainIdent(
     main
    ) [MainIdent]
    MainVariables(
      MainVariables(
        NoMainVariables(
        ) [NoMainVariables]
        Var_dec(
          Type(
           int
          ) [Type]
          SingleVarIdList(
            VarId(
             bodovi
            ) [VarId]
          ) [SingleVarIdList]
        ) [Var_dec]
      ) [MainVariables]
      Var_dec(
        Type(
         bool
        ) [Type]
        SingleVarIdList(
          VarId(
           bt
          ) [VarId]
        ) [SingleVarIdList]
      ) [Var_dec]
    ) [MainVariables]
    Statements(
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStatement(
                Assignment(
                  Designator(
                    SimpleDesignatorWithNamespace(
                     Nizovi
                     niz
                    ) [SimpleDesignatorWithNamespace]
                  ) [Designator]
                  Expr(
                    TermExpr(
                      Term(
                        SimpleFactor(
                          OperatorNew(
                            Type(
                             int
                            ) [Type]
                            Expr(
                              TermExpr(
                                Term(
                                  SimpleFactor(
                                    IntRef(
                                     4
                                    ) [IntRef]
                                  ) [SimpleFactor]
                                ) [Term]
                              ) [TermExpr]
                            ) [Expr]
                          ) [OperatorNew]
                        ) [SimpleFactor]
                      ) [Term]
                    ) [TermExpr]
                  ) [Expr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [Statements]
            DesignatorStatement(
              Assignment(
                Designator(
                  SimpleDesignatorWithoutNamespace(
                   nizrez
                  ) [SimpleDesignatorWithoutNamespace]
                ) [Designator]
                Expr(
                  TermExpr(
                    Term(
                      SimpleFactor(
                        OperatorNew(
                          Type(
                           int
                          ) [Type]
                          Expr(
                            TermExpr(
                              Term(
                                SimpleFactor(
                                  IntRef(
                                   4
                                  ) [IntRef]
                                ) [SimpleFactor]
                              ) [Term]
                            ) [TermExpr]
                          ) [Expr]
                        ) [OperatorNew]
                      ) [SimpleFactor]
                    ) [Term]
                  ) [TermExpr]
                ) [Expr]
              ) [Assignment]
            ) [DesignatorStatement]
          ) [Statements]
          StatementDerived1(
          ) [StatementDerived1]
        ) [Statements]
        DesignatorStatement(
          Assignment(
            Designator(
              SimpleDesignatorWithNamespace(
               Rez
               rez1
              ) [SimpleDesignatorWithNamespace]
            ) [Designator]
            Expr(
              AddExpr(
                TermExpr(
                  Term(
                    MulopFactor(
                      MulopFactor(
                        SimpleFactor(
                          VarRef(
                            Designator(
                              SimpleDesignatorWithNamespace(
                               Konstante
                               nula
                              ) [SimpleDesignatorWithNamespace]
                            ) [Designator]
                          ) [VarRef]
                        ) [SimpleFactor]
                        MullOP(
                        ) [MullOP]
                        VarRef(
                          Designator(
                            ArrayDesignator(
                              ArrayDelegator(
                                SimpleDesignatorWithNamespace(
                                 Nizovi
                                 niz
                                ) [SimpleDesignatorWithNamespace]
                              ) [ArrayDelegator]
                              Expr(
                                TermExpr(
                                  Term(
                                    SimpleFactor(
                                      IntRef(
                                       3
                                      ) [IntRef]
                                    ) [SimpleFactor]
                                  ) [Term]
                                ) [TermExpr]
                              ) [Expr]
                            ) [ArrayDesignator]
                          ) [Designator]
                        ) [VarRef]
                      ) [MulopFactor]
                      MullOP(
                      ) [MullOP]
                      ParenthesisExpr(
                        Expr(
                          AddExpr(
                            TermExpr(
                              Term(
                                SimpleFactor(
                                  VarRef(
                                    Designator(
                                      SimpleDesignatorWithNamespace(
                                       Konstante
                                       jedan
                                      ) [SimpleDesignatorWithNamespace]
                                    ) [Designator]
                                  ) [VarRef]
                                ) [SimpleFactor]
                              ) [Term]
                            ) [TermExpr]
                            PlusOP(
                            ) [PlusOP]
                            Term(
                              SimpleFactor(
                                VarRef(
                                  Designator(
                                    SimpleDesignatorWithoutNamespace(
                                     dva
                                    ) [SimpleDesignatorWithoutNamespace]
                                  ) [Designator]
                                ) [VarRef]
                              ) [SimpleFactor]
                            ) [Term]
                          ) [AddExpr]
                        ) [Expr]
                      ) [ParenthesisExpr]
                    ) [MulopFactor]
                  ) [Term]
                ) [TermExpr]
                PlusOP(
                ) [PlusOP]
                Term(
                  SimpleFactor(
                    VarRef(
                      Designator(
                        ArrayDesignator(
                          ArrayDelegator(
                            SimpleDesignatorWithoutNamespace(
                             nizrez
                            ) [SimpleDesignatorWithoutNamespace]
                          ) [ArrayDelegator]
                          Expr(
                            TermExpr(
                              Term(
                                SimpleFactor(
                                  IntRef(
                                   2
                                  ) [IntRef]
                                ) [SimpleFactor]
                              ) [Term]
                            ) [TermExpr]
                          ) [Expr]
                        ) [ArrayDesignator]
                      ) [Designator]
                    ) [VarRef]
                  ) [SimpleFactor]
                ) [Term]
              ) [AddExpr]
            ) [Expr]
          ) [Assignment]
        ) [DesignatorStatement]
      ) [Statements]
      Print(
        Expr(
          TermExpr(
            Term(
              SimpleFactor(
                VarRef(
                  Designator(
                    SimpleDesignatorWithNamespace(
                     Rez
                     rez1
                    ) [SimpleDesignatorWithNamespace]
                  ) [Designator]
                ) [VarRef]
              ) [SimpleFactor]
            ) [Term]
          ) [TermExpr]
        ) [Expr]
        NoConstToPrint(
        ) [NoConstToPrint]
      ) [Print]
    ) [Statements]
  ) [MainMethod]
) [Program]
INFO  16:07:31,730 - [info] Declared namespace constant Konstante.nula. at line : 6.
INFO  16:07:31,731 - [info] Declared namespace constant Konstante.jedan. at line : 7.
INFO  16:07:31,731 - [info] Declared namespace constant Konstante.pet. at line : 8.
INFO  16:07:31,731 - [info] Declared namespace constant.Konstante.bvar at line : 9.
INFO  16:07:31,731 - [info] Declared namespace constant Konstante.cvar. at line : 10.
INFO  16:07:31,731 - [info] Namespace variable Konstante.num_var has been declared. at line : 11.
INFO  16:07:31,731 - [info] Namespace Variable Nizovi.niz has been declared. at line : 16.
INFO  16:07:31,731 - [info] Namespace variable Rez.rez1 has been declared. at line : 23.
INFO  16:07:31,731 - [info] Namespace variable Rez.rez2 has been declared. at line : 24.
INFO  16:07:31,731 - [info] Namespace variable Rez.rez3 has been declared. at line : 25.
INFO  16:07:31,731 - [info] Variable global_num has been declared. at line : 29.
INFO  16:07:31,731 - [info] Variable nizch has been declared. at line : 30.
INFO  16:07:31,731 - [info] Variable nizrez has been declared. at line : 31.
INFO  16:07:31,731 - [info] Declared global constant dva. at line : 32.
INFO  16:07:31,731 - [info] Main :  at line : 35.
INFO  16:07:31,731 - [info] Variable bodovi has been declared. at line : 36.
INFO  16:07:31,731 - [info] Variable bt has been declared. at line : 37.
INFO  16:07:31,731 - [info] Local use of variable Nizovi.niz..
INFO  16:07:31,731 - [info] Assignemnt succesful.
INFO  16:07:31,731 - [info] Global use of variable nizrez..
INFO  16:07:31,731 - [info] Assignemnt succesful.
INFO  16:07:31,732 - [info] Local use of variable Rez.rez1..
INFO  16:07:31,732 - [info] Local use of variable Konstante.nula..
INFO  16:07:31,732 - [info] Local use of variable Nizovi.niz..
INFO  16:07:31,732 - [info] Local use of variable Konstante.jedan..
INFO  16:07:31,732 - [info] Global use of variable dva..
INFO  16:07:31,732 - [info] Global use of variable nizrez..
INFO  16:07:31,732 - [info] Assignemnt succesful.
INFO  16:07:31,732 - [info] Local use of variable Rez.rez1..
INFO  16:07:31,732 - [info] Print check succesful.
INFO  16:07:31,732 - Print calls = 1
ERROR 16:07:31,732 - Parsiranje NIJE uspesno zavrseno!
